services:
  retrip-app:
    image: bumnote/retrip:latest
    platform: linux/amd64
    container_name: retrip-app
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_REDIS_HOST: ${SPRING_REDIS_HOST}
      SPRING_REDIS_PORT: ${SPRING_REDIS_PORT}
    networks:
      - retrip-net
    restart: always

  db:
    image: mysql:8.0
    platform: linux/amd64
    container_name: retrip-db
    env_file:
      - .env
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/mysql/mysql-healthcheck.sh:/usr/local/bin/mysql-healthcheck.sh

    networks:
      - retrip-net
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "/usr/local/bin/mysql-healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  redis:
    image: redis:7
    platform: linux/amd64
    container_name: retrip-redis
    ports:
      - "6379:6379"
    networks:
      - retrip-net
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana
    container_name: grafana
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/html:/var/www/certbot
      - ./nginx/ssl:/etc/letsencrypt
    depends_on:
      - retrip-app
    networks:
      - retrip-net
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    env_file:
      - .env
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    networks:
      - retrip-net

volumes:
  dbdata:
  grafana-storage:
  certbot_data:

networks:
  retrip-net:
    driver: bridge
