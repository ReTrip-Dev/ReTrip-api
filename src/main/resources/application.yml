spring:
  profiles:
    default: local

  # File Upload Setting
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 50MB

# ─────────────────────────────────────────────
# Monitoring – Actuator + Micrometer Prometheus
# ────────────────────────────────────────────────
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus      # 개발 중엔 "*"
  metrics:
    tags:
      application: retrip-api
    export:
      prometheus:
        enabled: true                       # ← 반드시 이 경로
    distribution:
      percentiles-histogram:
        http.server.requests: true

# ReTrip 애플리케이션 설정
retrip:
  image:
    min-count: 5
    max-count: 30

# ChatGPT 중계서버 설정
chatgpt:
  proxy:
    url: http://localhost:5000/analyze_s3_images

server:
  servlet:
    session:
      timeout: 60m

# application.yml
openai:
  api-key: ${OPENAI_API_KEY}         # 환경변수 주입
  model: gpt-4o-mini

---
spring:
  # Profile Config
  config:
    activate:
      on-profile: local

  datasource:
    driver-class-name: ${DB_DRIVER_CLASS_NAME}
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  # JPA Config
  jpa:
    show-sql: true
    database: mysql
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true

  # Spring Security OAuth2, Client
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: ${AUTHORIZATION_URI}
            token-uri: ${TOKEN_URI}
            user-info-uri: ${USER_INFO_URI}
            jwk-set-uri: ${OIDC_JWK_SET_URI}
            user-name-attribute: sub
        registration:
          kakao:
            authorization-grant-type: ${GRANT_TYPE}
            redirect-uri: ${LOGIN_REDIRECT_URI}
            client-name: Kakao
            client-authentication-method: client_secret_post
            client-id: ${REST_API_KEY}
            client-secret: ${CLIENT_SECRET_KEY}
            scope:
              - openid              # OIDC
              - name                # 이름
              - profile_nickname    # 닉네임
              - account_email       # 이메일

  # Redis Config
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  # Email
  mail:
    host: ${EMAIL_HOST}
    port: ${EMAIL_PORT}
    username: ${MAIL_ADDRESS}
    password: ${APP_PASSWORD}
    properties:
      mail.smtp:
        auth: true
        starttls.enable: true
        starttls.required: true

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY_ID}
        secret-key: ${AWS_SECRET_ACCESS_KEY}
      region.static: ap-northeast-2
      s3:
        bucket: retrip-photos-ssafy04
        dir-name: images
      stack.auto: false

# ────────────────────────────────────────────────
# ▼ 테스트 프로필 ▼
# ────────────────────────────────────────────────
---
spring:
  # Profile Config
  config:
    activate:
      on-profile: test

  # DB Config
  datasource:
    driver-class-name: ${TEST_DB_DRIVER_CLASS_NAME}
    url: ${TEST_DB_URL}
    username: ${TEST_DB_USERNAME}
    password: ${TEST_DB_PASSWORD}

  # JPA Config
  jpa:
    hibernate.ddl-auto: create-drop
    show-sql: true
    properties.hibernate.format_sql: true
    database-platform: org.hibernate.dialect.H2Dialect

  # Spring Security OAuth2, Client
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: ${AUTHORIZATION_URI}
            token-uri: ${TOKEN_URI}
            user-info-uri: ${USER_INFO_URI}
            jwk-set-uri: ${OIDC_JWK_SET_URI}
            user-name-attribute: sub
        registration:
          kakao:
            authorization-grant-type: ${GRANT_TYPE}
            redirect-uri: ${LOGIN_REDIRECT_URI}
            client-name: Kakao
            client-authentication-method: client_secret_post
            client-id: ${REST_API_KEY}
            client-secret: ${CLIENT_SECRET_KEY}
            scope:
              - openid
              - name
              - profile_nickname
              - account_email

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY_ID}
        secret-key: ${AWS_SECRET_ACCESS_KEY}
      region.static: ap-northeast-2
      s3:
        bucket: retrip-photos-ssafy04
        dir-name: test-images
      stack.auto: false
