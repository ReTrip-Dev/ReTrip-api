spring:
  # Basic Config
  profiles:
    default: local
  config:
    import:
      - application-secret.yml

  # File Upload Setting
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 50MB

# prometheus & actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  metrics:
    tags:
      application: retrip-api
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true

# ReTrip 애플리케이션 설정
retrip:
  image:
    min-count: 5
    max-count: 20

server:
  servlet:
    session:
      timeout: 60m

openai:
  api-key: ${openai.api-key}
  model: gpt-4o-mini

---
spring:
  # Profile Config
  config:
    activate:
      on-profile: local

  datasource:
    driver-class-name: ${db.local.driver-class-name}
    url: ${db.local.url}
    username: ${db.local.username}
    password: ${db.local.password}

  # JPA Config
  jpa:
    show-sql: true
    database: mysql
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true

  # Spring Security OAuth2, Client
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: ${kakao.oauth2.authorization-uri}
            token-uri: ${kakao.oauth2.token-uri}
            user-info-uri: ${kakao.oauth2.user-info-uri}
            jwk-set-uri: ${kakao.oauth2.oidc-jwk-set-uri}
            user-name-attribute: sub
        registration:
          kakao:
            authorization-grant-type: ${kakao.oauth2.grant-type}
            redirect-uri: ${kakao.oauth2.login-redirect-uri}
            client-name: Kakao
            client-authentication-method: client_secret_post
            client-id: ${kakao.oauth2.rest-api-key}
            client-secret: ${kakao.oauth2.client-secret-key}
            scope:
              - openid              # OIDC
              - name                # 이름
              - profile_nickname    # 닉네임
              - account_email       # 이메일

  # Redis Config
  data:
    redis:
      host: ${redis.host}
      port: ${redis.port}

  # Email
  mail:
    host: ${email.host}
    port: ${email.port}
    username: ${email.mail-address}
    password: ${email.app-password}
    properties:
      mail.smtp:
        auth: true
        starttls.enable: true
        starttls.required: true

  cloud:
    aws:
      credentials:
        access-key: ${aws.access-key-id}
        secret-key: ${aws.secret-access-key}
      region.static: ap-northeast-2
      s3:
        bucket: retrip-photos-ssafy04
        dir-name: images
      stack.auto: false